<?php
/**
 * @file
 * Install, update and uninstall functions for the DF installation profile.
 */

use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function df_install() {
  // Now that all modules are installed, make sure the entity storage and other
  // handlers are up to date with the current entity and field definitions. For
  // example, Path module adds a base field to nodes and taxonomy terms after
  // those modules are already installed.
  \Drupal::service('entity.definition_update_manager')->applyUpdates();
}

/**
 * Implements hook_install_tasks().
 */
function df_install_tasks(): array {
  $tasks = [];

  // Set site settings after install.
  $tasks['df_system_settings'] = [];

  return $tasks;
}

/**
 * Set site settings.
 *
 * The site name gets overwritten when the install configuration form is
 * submitted by Drush. We are using hook_install_tasks() to set values after
 * the form has been submitted.
 */
function df_system_settings() {
  $config_factory = \Drupal::configFactory();

  // Set the default and admin theme.
  $config_factory
    ->getEditable('system.theme')
    ->set('default', 'one')
    ->set('admin', 'acquia_claro')
    ->save(TRUE);

  // Set site name.
  $config_factory
    ->getEditable('system.site')
    ->set('name', "DF")
    ->save(TRUE);
}

/**
 * Uninstall admin_login_path and remove permissions it set to use admin theme.
 */
function df_update_8401() {
  \Drupal::service('module_installer')->uninstall(['admin_login_path']);
  user_role_revoke_permissions(RoleInterface::ANONYMOUS_ID, ['view the administration theme']);
  user_role_revoke_permissions(RoleInterface::AUTHENTICATED_ID, ['view the administration theme']);
}
